---
# tasks file for update_secrets

- name: (VAULT - Keys) set toot token as fact
  set_fact: 
    vault_url: "{{ vault_url }}"
    cacheable: yes

- debug: msg="{{ vault_url }}"

- name: Create {{ platform }} secrets path
  environment:
    VAULT_TOKEN: "{{ vault_token|quote }}"
    VAULT_ADDR: "{{ vault_url|quote }}"
  shell: "VAULT_TOKEN={{vault_token}} /usr/local/bin/vault secrets enable -version=2 -path={{platform}} kv"
  ignore_errors: true

- name: Check mounts 
  uri:
    url: "{{ vault_url }}/v1/sys/mounts"
    body_format: json
    method: GET
    headers:
      X-Vault-Token: "s.ERc7VRhVOV7qt2dA2awN5Rgd"
    return_content: yes



- name: (VAULT - Populate) Add secrets to {{ platform }} vault path 
  vars:
    rndpass: "{{ lookup('password', '/dev/null length=15 chars=ascii_letters,digits') }}"
  uri:
    url: "{{ vault_url }}/v1/{{ platform }}/data/{{ application }}/{{ vnf }}/{{ item }}"
    body_format: json
    method: POST
    headers:
      X-Vault-Token: "s.ERc7VRhVOV7qt2dA2awN5Rgd"
    body: { "options": { "max_versions": "12" }, "data": { "password":"{{ rndpass }}" }}
    return_content: yes
    status_code: "200"
  with_items: "{{ users }}"


- name: Get secrets from {{ platform }}
  uri:
    url: "{{ vault_url }}/v1/{{ platform }}/data/{{ application }}/{{ vnf }}/{{ item }}"
    body_format: json
    method: GET
    headers:
      X-Vault-Token: "s.ERc7VRhVOV7qt2dA2awN5Rgd"
    return_content: yes
    status_code: "200"
  register: key_pass
  with_items: "{{ users }}"


- debug: var=key_pass
